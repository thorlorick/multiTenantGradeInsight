version: '3.8'

services:
  # PostgreSQL database for multi-tenant architecture (shard 1 for now)
  postgres:
    image: postgres:15
    container_name: gradeinsight-db
    environment:
      POSTGRES_DB: gradeinsight
      POSTGRES_USER: gradeuser
      POSTGRES_PASSWORD: gradepass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gradeuser -d gradeinsight"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: gradeinsight-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # FastAPI Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gradeinsight-app
    env_file:
      - .env
    environment:
      DATABASE_SHARD_1_URL: ${DATABASE_SHARD_1_URL}
      TENANT_REGISTRY_URL: ${TENANT_REGISTRY_URL}
      REDIS_URL: ${REDIS_URL}
      DEBUG: ${DEBUG}
      SECRET_KEY: ${SECRET_KEY}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      ALLOW_ORIGINS: ${ALLOW_ORIGINS}
      CORS_ENABLED: ${CORS_ENABLED}
      LOG_LEVEL: ${LOG_LEVEL}
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: gradeinsight-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@gradeinsight.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  default:
    driver: bridge


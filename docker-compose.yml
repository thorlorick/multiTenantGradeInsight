version: '3.8'

services:
  # FastAPI Application
  gradeinsight-app:
    build: .
    container_name: gradeinsight-app
    ports:
      - "8000:8000"
    environment:
      # Application Settings
      SECRET_KEY: your-secret-key-here-change-in-production
      JWT_SECRET_KEY: your-jwt-secret-key-here-change-in-production
      DEBUG: "false"
      
      # Database Shards - PostgreSQL connections
      DATABASE_SHARD_1_URL: postgresql+asyncpg://gradeuser:gradepass@postgres-shard-1:5432/gradeinsight_shard1
      DATABASE_SHARD_2_URL: postgresql+asyncpg://gradeuser:gradepass@postgres-shard-2:5432/gradeinsight_shard2
      DATABASE_SHARD_3_URL: postgresql+asyncpg://gradeuser:gradepass@postgres-shard-3:5432/gradeinsight_shard3
      
      # Tenant Registry Database
      TENANT_REGISTRY_URL: postgresql+asyncpg://gradeuser:gradepass@postgres-registry:5432/tenant_registry
      
      # Redis for caching
      REDIS_URL: redis://redis:6379/0
      
      # CORS settings
      ALLOW_ORIGINS: "http://localhost:3000,http://localhost:8000,https://your-domain.com"
    depends_on:
      - postgres-shard-1
      - postgres-shard-2
      - postgres-shard-3
      - postgres-registry
      - redis
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - gradeinsight-network
    restart: unless-stopped

  # PostgreSQL Shard 1 (Schools 1-1000)
  postgres-shard-1:
    image: postgres:15
    container_name: postgres-shard-1
    environment:
      POSTGRES_DB: gradeinsight_shard1
      POSTGRES_USER: gradeuser
      POSTGRES_PASSWORD: gradepass
    volumes:
      - postgres_shard1_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - gradeinsight-network
    restart: unless-stopped

  # PostgreSQL Shard 2 (Schools 1001-2000)
  postgres-shard-2:
    image: postgres:15
    container_name: postgres-shard-2
    environment:
      POSTGRES_DB: gradeinsight_shard2
      POSTGRES_USER: gradeuser
      POSTGRES_PASSWORD: gradepass
    volumes:
      - postgres_shard2_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5433:5432"
    networks:
      - gradeinsight-network
    restart: unless-stopped

  # PostgreSQL Shard 3 (Schools 2001-3000)
  postgres-shard-3:
    image: postgres:15
    container_name: postgres-shard-3
    environment:
      POSTGRES_DB: gradeinsight_shard3
      POSTGRES_USER: gradeuser
      POSTGRES_PASSWORD: gradepass
    volumes:
      - postgres_shard3_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5434:5432"
    networks:
      - gradeinsight-network
    restart: unless-stopped

  # Tenant Registry Database
  postgres-registry:
    image: postgres:15
    container_name: postgres-registry
    environment:
      POSTGRES_DB: tenant_registry
      POSTGRES_USER: gradeuser
      POSTGRES_PASSWORD: gradepass
    volumes:
      - postgres_registry_data:/var/lib/postgresql/data
      - ./init-registry.sql:/docker-entrypoint-initdb.d/init-registry.sql
    ports:
      - "5435:5432"
    networks:
      - gradeinsight-network
    restart: unless-stopped

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: redis-cache
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - gradeinsight-network
    restart: unless-stopped

  # Nginx reverse proxy (optional for production)
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - gradeinsight-app
    networks:
      - gradeinsight-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_shard1_data:
  postgres_shard2_data:
  postgres_shard3_data:
  postgres_registry_data:
  redis_data:

networks:
  gradeinsight-network:
    driver: bridge

